I"<p>(본 게시글은 iOS 생명주기와 관련된 게시물 중 네번째인 <strong><code class="highlighter-rouge">AppDelegate</code> &amp; <code class="highlighter-rouge">SceneDelegate</code></strong>에 대해 다루고 있습니다.)</p>

<p>Xcode 11 업데이트 이후 프로젝트를 생성하면 <code class="highlighter-rouge">SceneDelegate.swift</code> 파일이 추가로 생성됩니다. 아이패드에서 멀티 윈도우를 지원하면서부터 iOS 13 이상에서 <code class="highlighter-rouge">Scene</code>이라는 개념이 도입되었기 때문인데요, 이번 게시물에서는 멀티 윈도우가 무엇이고 왜 <code class="highlighter-rouge">Scene</code>이 필요해졌는지, 기존의 <code class="highlighter-rouge">AppDelegate</code>에서 어떤 부분이 <code class="highlighter-rouge">SceneDelegate</code>로 넘어갔는지 등에 대해 정리해보겠습니다.</p>

<hr />

<h4 id="multi-window">Multi Window</h4>
<ul>
  <li>기존에는 앱은 한 번에 하나만 실행할 수 있었습니다. 그런데 최신 버전의 아이패드부터는 멀티 윈도우라는 개념이 도입되었는데요, 하나의 앱을 여러 개 띄울 수 있게 된겁니다. 예를 들어, 각각 다른 사이트에 접속된 Safari 앱을 여러 개 띄울 수도 있고, 각종 앱들 옆에 split view로 메모 앱을 각각 띄울 수도 있게 되었죠.</li>
  <li></li>
</ul>

<hr />

<h4 id="delegate-call">Delegate Call</h4>
<ul>
  <li>앱의 상태변화가 일어나면 <code class="highlighter-rouge">UIApplicationDelegate</code>를 통해 이벤트가 전달됩니다.</li>
  <li><code class="highlighter-rouge">UIApplicationDelegate</code>를 참조하는 <code class="highlighter-rouge">AppDelegate</code> 객체에서 상태 변화에 따른 작업을 정의할 수 있습니다.</li>
</ul>

<ol>
  <li><strong><code class="highlighter-rouge">application(_:willFinishLaunchingWithOptions:)</code></strong>
    <ul>
      <li>앱이 최초로 실행될 때 호출 (Not Running)</li>
      <li>주로 앱 실행 시 최초로 실행할 코드를 작성합니다.</li>
    </ul>
  </li>
  <li><strong><code class="highlighter-rouge">application(_:didFinishLaunchingWithOptions:)</code></strong>
    <ul>
      <li>앱이 실행되고 사용자에게 화면이 보이기 직전에 호출 (Not Running → Inactive)</li>
      <li>주로 앱 실행 후에 최종 초기화 코드를 작성합니다.</li>
    </ul>
  </li>
  <li><strong><code class="highlighter-rouge">applicationDidBecomeActive(_:)</code></strong>
    <ul>
      <li>앱이 Active 상태로 전횐된 직후 호출 (Inactive → Active)</li>
    </ul>
  </li>
  <li><strong><code class="highlighter-rouge">applicationWillResignActive(_:)</code></strong>
    <ul>
      <li>앱이 Inactive 상태로 전환되기 직전 호출 (Active → Inactive)</li>
    </ul>
  </li>
  <li><strong><code class="highlighter-rouge">applicationDidEnterBackground(_:)</code></strong>
    <ul>
      <li>앱이 Background 상태로 전환된 직후 호출 (Inactive → Background)</li>
      <li>특별한 처리가 없으면 Suspended 상태로 전환됩니다.</li>
      <li>주로 앱이 종료되기 전에 중요 데이터를 저장하거나 공유 자원을 해제하는 등을 위한 코드를 작성합니다.</li>
    </ul>
  </li>
  <li><strong><code class="highlighter-rouge">applicationWillEnterForeground(_:)</code></strong>
    <ul>
      <li>앱이 Background에서 Foreground로 돌아오기 직전 호출 (Background → Foreground)</li>
    </ul>
  </li>
  <li><strong><code class="highlighter-rouge">applicationWillTerminate(_:)</code></strong>
    <ul>
      <li>앱이 종료되기 직전 호출</li>
      <li>다음과 같은 경우에는 호출되지 않습니다.
        <ol>
          <li>메모리 확보를 위해 iOS 시스템에 의해 앱이 종료된 경우</li>
          <li>사용자가 멀티태스킹 UI를 통해 종료한 경우</li>
          <li>오류로 인해 앱이 종료된 경우</li>
          <li>기기를 재부팅한 경우</li>
        </ol>
      </li>
    </ul>
  </li>
</ol>

<hr />

<p><img src="/images/2020-02-20/app_based_state_transition_2.jpeg" alt="app_based_state_transition" /></p>

<hr />

<h5 id="reference">Reference</h5>
<ul>
  <li><a href="https://developer.apple.com/documentation/uikit/app_and_environment/managing_your_app_s_life_cycle">Managing Your App’s Life Cycle</a></li>
  <li><a href="https://developer.apple.com/videos/play/wwdc2019/258/">Architecting Your App for Multiple Windows</a></li>
  <li><a href="https://zeddios.tistory.com/811">SceneDelegate (1) - Architecting Your App for Multiple Windows</a></li>
</ul>

<hr />

<h5 id="ios-앱-생명주기">iOS 앱 생명주기</h5>
<ol>
  <li><a href="/2020/02/20/iOS-앱-생명주기">iOS 앱 생명주기</a></li>
  <li><a href="/2020/02/20/앱의-상태변화-&amp;-Delegate-Call">앱의 상태변화 &amp; Delegate Call</a></li>
  <li><a href="">View Controller 생명주기</a></li>
  <li><a href="/2020/02/20/AppDelegate-&amp;-SceneDelegate"><strong>AppDelegate &amp; SceneDelegate</strong></a></li>
</ol>
:ET