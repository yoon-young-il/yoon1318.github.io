I""<p><strong>UIView에 그라데이션 효과를 넣는 방법</strong>을 알려드리겠습니다.</p>

<hr />

<h4 id="1-uiview와-cagradientlayer-객체-생성">1. <code class="highlighter-rouge">UIView</code>와 <code class="highlighter-rouge">CAGradientLayer</code> 객체 생성</h4>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">let</span> <span class="nv">view</span> <span class="o">=</span> <span class="kt">UIView</span><span class="p">()</span>
<span class="k">let</span> <span class="nv">gradientLayer</span> <span class="o">=</span> <span class="kt">CAGradientLayer</span><span class="p">()</span>
<span class="n">gradientLayer</span><span class="o">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">view</span><span class="o">.</span><span class="n">bounds</span>
</code></pre></div></div>

<hr />

<h4 id="2-그라데이션-방향-설정">2. 그라데이션 방향 설정</h4>
<p>그라데이션 방향을 설정하기 위해 시작점과 중간점, 그리고 끝점의 좌표가 필요해요. 아래 좌표를 보고 <code class="highlighter-rouge">(x, y)</code>를 설정하면 됩니다.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(0.0, 0.0) ... (0.5, 0.0) ... (1.0, 0.0)
    ...            ...            ...
(0.0, 0.5) ... (0.5, 0.5) ... (1.0, 0.5)
    ...            ...            ...
(0.0, 1.0) ... (0.5, 1.0) ... (1.0, 1.0)
</code></pre></div></div>
<p><br />
이번 예시에서는 세로 방향의 그라데이션을 넣어볼게요. 그러면 시작점은 (0.5, 0), 끝점은 (0.5, 1)이 되겠죠? 그리고 중간 지점은 0.65로 설정해볼게요.</p>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gradientLayer</span><span class="o">.</span><span class="n">startPoint</span> <span class="o">=</span> <span class="kt">CGPoint</span><span class="p">(</span><span class="nv">x</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span> <span class="nv">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">gradientLayer</span><span class="o">.</span><span class="n">endPoint</span>   <span class="o">=</span> <span class="kt">CGPoint</span><span class="p">(</span><span class="nv">x</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span> <span class="nv">y</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">gradientLayer</span><span class="o">.</span><span class="n">locations</span>  <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.65</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<hr />

<h4 id="3-색깔-값-입력">3. 색깔 값 입력</h4>
<p>시작점, 중간점, 끝점 순으로 색깔을 넣어줍니다. UIColor가 아닌 CGColor를 사용한다는 점 유의하세요.</p>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gradientLayer</span><span class="o">.</span><span class="n">colors</span> <span class="o">=</span>
    <span class="p">[</span><span class="kt">UIColor</span><span class="p">(</span><span class="nv">hex</span><span class="p">:</span> <span class="mh">0x8f5eea</span><span class="p">)</span><span class="o">.</span><span class="n">cgColor</span><span class="p">,</span>
     <span class="kt">UIColor</span><span class="p">(</span><span class="nv">hex</span><span class="p">:</span> <span class="mh">0x7744d5</span><span class="p">)</span><span class="o">.</span><span class="n">cgColor</span><span class="p">,</span>
     <span class="kt">UIColor</span><span class="p">(</span><span class="nv">hex</span><span class="p">:</span> <span class="mh">0x582abf</span><span class="p">)</span><span class="o">.</span><span class="n">cgColor</span><span class="p">]</span>
</code></pre></div></div>
<p><br />
(헥사코드를 이용하여 UIColor를 정의하는 방법은 <a href="/2019/12/29/헥사코드로-UIColor-정의하기">‘헥사코드로 UIColor 정의하기’</a>에서 다룬 내용을 활용하였습니다.)</p>

<hr />

<h4 id="4-shouldrasterize-설정">4. <code class="highlighter-rouge">shouldRasterize</code> 설정</h4>
<p><code class="highlighter-rouge">gradientLayer</code>의 <code class="highlighter-rouge">shouldRasterize</code>값을 <code class="highlighter-rouge">true</code>로 설정하면 이미지 랜더링을 한 번만 하기 때문에 layer의 성능이 증가해요. 만약 정지 이미지를 보여준다면 <code class="highlighter-rouge">true</code>로, 움직이는 애니메이션을 보여준다면 <code class="highlighter-rouge">false</code>로 설정하면 되겠습니다.</p>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gradientLayer</span><span class="o">.</span><span class="n">shouldRasterize</span> <span class="o">=</span> <span class="kc">true</span>
</code></pre></div></div>

<hr />

<h4 id="5-정리">5. 정리</h4>
<p>이제 <code class="highlighter-rouge">view</code>의 <code class="highlighter-rouge">layer</code>에 우리가 만든 <code class="highlighter-rouge">gradientLayer</code>를 넣어주면 마무리가 됩니다. 정리하면 다음과 같습니다.</p>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">let</span> <span class="nv">view</span> <span class="o">=</span> <span class="kt">UIView</span><span class="p">()</span>
<span class="k">let</span> <span class="nv">gradientLayer</span> <span class="o">=</span> <span class="kt">CAGradientLayer</span><span class="p">()</span>
<span class="n">gradientLayer</span><span class="o">.</span><span class="n">frame</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="n">bounds</span>

<span class="n">gradientLayer</span><span class="o">.</span><span class="n">startPoint</span> <span class="o">=</span> <span class="kt">CGPoint</span><span class="p">(</span><span class="nv">x</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span> <span class="nv">y</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">gradientLayer</span><span class="o">.</span><span class="n">endPoint</span> <span class="o">=</span> <span class="kt">CGPoint</span><span class="p">(</span><span class="nv">x</span><span class="p">:</span> <span class="mf">0.5</span><span class="p">,</span> <span class="nv">y</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">gradientLayer</span><span class="o">.</span><span class="n">locations</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.65</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>

<span class="n">gradientLayer</span><span class="o">.</span><span class="n">colors</span> <span class="o">=</span>
    <span class="p">[</span><span class="kt">UIColor</span><span class="p">(</span><span class="nv">hex</span><span class="p">:</span> <span class="mh">0x8f5eea</span><span class="p">)</span><span class="o">.</span><span class="n">cgColor</span><span class="p">,</span>
     <span class="kt">UIColor</span><span class="p">(</span><span class="nv">hex</span><span class="p">:</span> <span class="mh">0x7744d5</span><span class="p">)</span><span class="o">.</span><span class="n">cgColor</span><span class="p">,</span>
     <span class="kt">UIColor</span><span class="p">(</span><span class="nv">hex</span><span class="p">:</span> <span class="mh">0x582abf</span><span class="p">)</span><span class="o">.</span><span class="n">cgColor</span><span class="p">]</span>

<span class="n">gradientLayer</span><span class="o">.</span><span class="n">shouldRasterize</span> <span class="o">=</span> <span class="kc">true</span>

<span class="n">view</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="nf">addSublayer</span><span class="p">(</span><span class="n">gradientLayer</span><span class="p">)</span>
</code></pre></div></div>

<hr />

<p>일반적으로 프로젝트를 할 때 사용하는 그라데이션의 종류가 많지 않다보니, 저는 <code class="highlighter-rouge">extension</code>을 이용해서 미리 정의해놓고 사용해요. 여러분도 다양한 방법으로 활용하시면 좋을 것 같아요.</p>

<hr />

<p>(본 게시물의 내용은 Xcode 11, swift 5.1.3 의 환경에서 진행되었습니다.)</p>
:ET