I"<p>(본 게시글은 iOS 앱 생명주기와 관련된 게시물 중 첫번째인 <strong>iOS 앱 생명주기</strong>에 대해 다루고 있습니다.)</p>

<p>사용자가 앱을 터치한 이후 앱이 실행될 때까지 여러 작업들이 발생합니다. 해당 작업들이 어떤 단계로 이루어지고 언제 발생하는지를 알아야지 다양한 상황들에 대비해서 앱을 만들 수 있을 것입니다.</p>

<p>이번 게시물에서는 앱이 실행되고 종료되는 과정을 단계별로 간단하게 정리해보겠습니다.</p>

<hr />

<h3 id="앱-실행-과정">앱 실행 과정</h3>
<ol>
  <li><code class="highlighter-rouge">main</code> 함수 호출</li>
  <li><code class="highlighter-rouge">UIApplicationMain</code> 함수 호출</li>
  <li><code class="highlighter-rouge">UIApplication</code> 객체 생성</li>
  <li><code class="highlighter-rouge">info.plist</code> 파일에 담긴 정보를 이용하여 데이터를 로드</li>
  <li><code class="highlighter-rouge">AppDelegate</code> 객체를 생성하고 <code class="highlighter-rouge">UIApplication</code> 객체와 연결</li>
  <li>주요 객체 및 이벤트 루프 등을 생성한 이후 실행을 준비</li>
  <li>앱 실행 &amp; <code class="highlighter-rouge">Main Run Loop</code> 실행</li>
  <li>앱을 사용하지 않으면 iOS 시스템에 <code class="highlighter-rouge">terminate</code> 메시지를 전달</li>
  <li>앱 종료</li>
</ol>

<hr />

<h4 id="main-함수">main 함수</h4>
<ul>
  <li>C언어 기반으로 이루어진 Objective-C은 <code class="highlighter-rouge">main</code> 함수를 통해 프로그램이 시작합니다.</li>
  <li>Swift는 <code class="highlighter-rouge">main</code> 함수를 갖지 않습니다. 대신 iOS의 <code class="highlighter-rouge">UIKit framework</code>가 <code class="highlighter-rouge">main</code> 함수를 관리합니다.</li>
  <li>앱 개발자는 <code class="highlighter-rouge">@UIApplicationMain</code> 어노테이션을 갖는 <code class="highlighter-rouge">class</code>를 통해 해당 <code class="highlighter-rouge">class를</code> <code class="highlighter-rouge">UIApplication</code>의 <code class="highlighter-rouge">delegate class</code>로 전달할 수 있습니다.</li>
  <li>Swift에 <code class="highlighter-rouge">main</code> 함수가 없긴 하지만 앱 개발자가 앱 실행 과정에 직접적으로 관여할 수 없는 것은 아닙니다. <code class="highlighter-rouge">AppDelegate</code>의 <code class="highlighter-rouge">@UIApplicationMain</code> 어노테이션을 지우고 새로운 <code class="highlighter-rouge">main.swift</code> 파일을 만드는 방법 등을 이용하면 <code class="highlighter-rouge">main</code> 함수를 다룰 수도 있습니다.</li>
</ul>

<hr />

<h4 id="uiapplication">UIApplication</h4>
<ul>
  <li><code class="highlighter-rouge">Main Run Loop</code>에서의 <code class="highlighter-rouge">event loop</code>를 처리</li>
  <li><code class="highlighter-rouge">AppDelegate</code>에 앱의 상태 변화나 푸시 알림 등 주요 이벤트를 전달</li>
</ul>

<hr />

<h4 id="appdelegate">AppDelegate</h4>
<ul>
  <li><code class="highlighter-rouge">UIApplication</code> 객체와 함깨 앱 초기화, 상태 변화, 푸시 알림 등을 관리</li>
  <li>앱당 하나만 존재하며, 앱의 초기 자료구조를 설정</li>
  <li><code class="highlighter-rouge">@UIApplicationMain</code> 어노테이션을 갖는다.</li>
</ul>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">@UIApplicationMain</span>      <span class="c1">// 어노테이션</span>
<span class="kd">class</span> <span class="kt">AppDelegate</span><span class="p">:</span> <span class="kt">UIResponder</span><span class="p">,</span> <span class="kt">UIApplicationDelegate</span> <span class="p">{</span> <span class="o">...</span> <span class="p">}</span>
</code></pre></div></div>

<hr />

<h4 id="infoplist">info.plist</h4>
<ul>
  <li>앱의 <code class="highlighter-rouge">metadata</code>를 관리하는 파일</li>
  <li><code class="highlighter-rouge">Information property list file</code></li>
</ul>

<hr />

<h4 id="main-run-loop">Main Run Loop</h4>
<ul>
  <li><code class="highlighter-rouge">Main Run Loop</code>는 사용자 관련 이벤트들을 생성된 순서대로 처리하는 역할</li>
  <li>사용자가 디바이스에서 탭이나 줌과 같은 특정 액션을 취하면 해당 액션에 대한 이벤트가 생성되어 <code class="highlighter-rouge">event queue</code>에 보관되고, 하나씩 순서대로 <code class="highlighter-rouge">Main Run Loop</code>로 전달되어 처리된다.</li>
</ul>

<hr />

<h5 id="reference">Reference</h5>
<ul>
  <li><a href="https://velog.io/@cskim/iOS-App-생명주기Life-Cycle">[iOS] App 생명주기(Life Cycle)</a></li>
  <li><a href="https://jinshine.github.io/2018/05/28/iOS/앱의%20생명주기(App%20Life%20Cycle)와%20앱의%20구조(App%20Structure)/">[iOS] 앱의 생명주기(App Life Cycle)와 앱의 구조(App Structure)</a></li>
  <li><a href="https://rhammer.tistory.com/94">[Apple Dev Reference] 앱 라이프사이클 The App Life Cycle</a></li>
</ul>

<hr />

<h5 id="ios-앱-생명주기">iOS 앱 생명주기</h5>
<ol>
  <li><a href="/2020/02/20/iOS-앱-생명주기"><strong>iOS 앱 생명주기</strong></a></li>
  <li><a href="/2020/02/20/앱의-상태변화-&amp;-Delegate-Call">앱의 상태변화 &amp; Delegate Call</a></li>
  <li><a href="/2020/02/20/AppDelegate-&amp;-SceneDelegate">AppDelegate &amp; SceneDelegate</a></li>
</ol>
:ET